回顾内容

HOSTNAME  IP  SELINUX  IPTABLES/FIREWALLD  YUM


1.怎么确认光驱是否存在？
2.怎么确认光驱中有光盘？
3.怎么开机自动挂载光盘？

硬盘转速5400和7200   真空的环境下  机械硬盘


磁盘管理 

一块硬盘  对他进行分区 有几种分区方式

主分区  扩展分区  逻辑分区

有没有什么限制？

主分区不得超过4个

-----------------------



fdisk  

blkid   UUID  LABEL  

BLOCK  

mkfs 选项

mkswap

/etc/fstab

free -m  

df -hT

mv

1.主分区 5G	UUID	ext4			/mydata1

2.其他空间均分为扩展分区

3.逻辑分区  2G	swap  

4.逻辑分区 3G	LABEL MYDATA2   ext4	只读	/mydata2

5.逻辑分区  3G 	设备名 ext3	块大小为2048		/mydata3

逻辑分区从编号5开始

swap 创建步骤
1.

----------------------

YUM

本地YUM源第一步 就应该把镜像挂载好

YUM在线软件包管理
1.YUM
	yellow dog, Yellowdog Update Modifier
	yum repository: yum repo	YUM仓库
2.仓库
	存储了众多rpm包，以及包的相关的元数据文件（放置于特定目录下：repodata）
	工作模式：C/S   客户机、服务器
	仓库支持-网络仓库，本地仓库
		ftp://
		http://
		nfs://
		file://
	
3.配置本地YUM仓库实现软件包管理的步骤：
	1.挂上光盘（光驱，光盘，自动挂载）
	ls /dev/sr0
	fdisk -l /dev/sr0
	mkdir /dvd
	vim /etc/fstab
		/dev/sr0		/dvd	iso9660		defaults,ro	0 0
	mount -a
	df -T
	
	2.配置仓库指向文件
	cd /etc/yum.repos.d/
	vim dvd.repo
	[MYCD]				#仓库名字
	name=Local Yum Reop(TMD-1.0)	#仓库描述
	baseurl=file:///dvd			#仓库目录位置
	enabled=1			#仓库开关（1表示启用,0表示禁用）
	gpgcheck=0			#禁用合法性检查

4.相关命令
	针对仓库本身的管理：
	
	yum clean all		清空仓库在本机上的缓存
	
	yum makecache		重新建立本机上的仓库缓存信息

	yum repolist 		列示仓库的信息（名，描述，有效性，所能提供的包数）
	

	针对单个软件包的管理命令：
	yum install <包名>			安装指定包

※※※※※※※※※※※※※

新知识点

linux 7.X 	mariadb

mysql

MySql与MariaDB由来与历程
https://www.cnblogs.com/yy20141204bb/p/8376545.html

MariaDB不仅仅是Mysql的一个替代品，MariaDB包括的一些新特性使它优于MySQL。

MySQL数据库是一个关系型数据库管理系统，由瑞典MySQL AB公司开发。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。

（1）Mysql支持大型的数据库。可以处理拥有上千万条记录的大型数据库；

（2）MySQL使用标准的SQL数据语言形式；

（3）Mysql可以允许于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和Tcl等；

（4）Mysql对PHP有很好的支持，PHP是目前最流行的Web开发语言；

（5）MySQL支持大型数据库，支持5000万条记录的数据仓库，32位系统表文件最大可支持4GB，64位系统支持最大的表文件为8TB；

（6）采用了GPL协议（一种自由软件许可证，许可社会公众享有：运行、复制软件的自由，发行传播软件的自由，获得软件源码的自由，改进软件并将自己作出的改进版本向社会发行传播的自由）。

※※※※※※※※※※※※※
（10）2009年4月，Oracle公司以74亿美元收购Sun公司，自此MySQL数据库进入Oracle时代，而其第三方的存储引擎InnoDB早在2005年就被Oracle公司收购。

MySQL被收购之后，面临着被闭源的风险，因此MySQL之父 Widenius离开Sun之后，2009年重新开发代码全部开源免费关系型数据库，推出了MariaDB。
※※※※※※※※※※※※※

php mysql localhost，127.0.0.1和ip区别

https://www.easck.com/cos/2019/0105/252897.shtml

localhost与127.0.0.1的区别是什么？相信有人会说是本地ip，曾有人说，用127.0.0.1比localhost好，可以减少一次解析。看来这个入门问题还有人不清楚，其实这两者是有区别的。

no1:

localhost也叫local ，正确的解释是:本地服务器
127.0.0.1在windows等系统的正确解释是:本机地址(本机服务器)

no2:

localhot(local)是不经网卡传输！这点很重要，它不受网络防火墙和网卡相关的的限制。
127.0.0.1是通过网卡传输，依赖网卡，并受到网络防火墙和网卡相关的限制。

一般设置程序时本地服务用localhost是最好的，localhost不会解析成ip，也不会占用网卡、网络资源。

有时候用localhost可以，但用127.0.0.1就不可以的情况就是在于此。猜想localhost访问时，系统带的本机当前用户的权限去访问，而用ip的时候，等于本机是通过网络再去访问本机，可能涉及到网络用户的权限。

他家之言：

1. mysql -h 127.0.0.1 的时候，使用TCP/IP连接，
mysql server 认为该连接来自于127.0.0.1或者是"localhost.localdomain"

2. mysql -h localhost 的时候，是不使用TCP/IP连接的，而使用Unix socket；
此时，mysql server则认为该client是来自"localhost"

----------------------------------------


/etc/hostname		主机名配置文件
/etc/sysconfig/network-script/ifcfg-ensXXX	网卡相关信息配置文件
/etc/selinux/config	SELINUX配置文件
/etc/fstab		挂载全部在这个文件里
/etc/yum.repos.d/XXX.repo	YUM源配置文件

---------------------------------------


MYSQL教学

LINUX6.X   mysql  mysql-server mysql-devel

Linux 7.X  mariadb  mariadb-server mariadb-devel
客户端Client

服务端Server side

devel 包主要是供开发用

yum install  mariadb mariadb-server mariadb-devel

Is this ok [y/d/N]: y

yum install  mariadb mariadb-server mariadb-devel -y

已安装:
  mariadb.x86_64 1:5.5.64-1.el7                     mariadb-devel.x86_64 1:5.5.64-1.el7             
  mariadb-server.x86_64 1:5.5.64-1.el7      

LINUX服务教学步骤

1.安装服务程序

2.根据需求去修改服务的一些配置文件

3.启用服务

4.是否加入开机自启

mariadb  

启动mysql/mariadb    systemctl start mariadb

连接数据库  #  mysql -u root -p

数据库   --  数据表  -- 字段

mysql  	user	Host  User Password

mysql 里面更改密码  连接mysql 在里面更改
##show databases;
use mysql;
##desc user;
##select host,user,password from user;
update user set password=password("123456") where user="root";

1.  systemctl restart mariadb
2. mysql >  flush privileges;

mysql外部更改密码
1.当mysql有密码的时候           	
mysqladmin -u root -p  password "123123"
输入一次旧密码		password后面跟着的是新密码
2.新安装的mysql 没有密码的时候
mysqladmin -u root password "123123"




---------------------

MariaDB [(none)]> create database myDB;
Query OK, 1 row affected (0.00 sec)

MariaDB [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| myDB               |
| mysql              |
| performance_schema |
| test               |
+--------------------+
5 rows in set (0.00 sec)

MariaDB [(none)]> use myDB;
Database changed
MariaDB [myDB]> create table baseinfo ( id int(11) NOT NULL PRIMARY KEY  auto_increment, name varchar(10) NOT NULL, sex char(1) default 'M', birthday date , school char(20) );
Query OK, 0 rows affected (0.00 sec)

MariaDB [myDB]> describe baseinfo;
+----------+-------------+------+-----+---------+----------------+
| Field    | Type        | Null | Key | Default | Extra          |
+----------+-------------+------+-----+---------+----------------+
| id       | int(11)     | NO   | PRI | NULL    | auto_increment |
| name     | varchar(10) | NO   |     | NULL    |                |
| sex      | char(1)     | YES  |     | M       |                |
| birthday | date        | YES  |     | NULL    |                |
| school   | char(20)    | YES  |     | NULL    |                |
+----------+-------------+------+-----+---------+----------------+
5 rows in set (0.00 sec)


MariaDB [myDB]> insert into baseinfo values
    -> (1001,"TEST","M","1999-07-23","CJXY"),
    -> (1002,"TEST","M","1999-07-23","CJXY"),
    -> (1003,"TEST","M","1999-07-23","CJXY"),
    -> (1005,"TEST","M","1999-07-23","CJXY"),
    -> (1006,"TEST","M","1999-07-23","CJXY")
    -> ;
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0

MariaDB [myDB]> select * from baseinfo;
+------+------+------+------------+--------+
| id   | name | sex  | birthday   | school |
+------+------+------+------------+--------+
| 1001 | TEST | M    | 1999-07-23 | CJXY   |
| 1002 | TEST | M    | 1999-07-23 | CJXY   |
| 1003 | TEST | M    | 1999-07-23 | CJXY   |
| 1005 | TEST | M    | 1999-07-23 | CJXY   |
| 1006 | TEST | M    | 1999-07-23 | CJXY   |
+------+------+------+------------+--------+
5 rows in set (0.00 sec)


-----------------------------

导出数据

[root@localhost ~]# mysqldump -u root -p myDB baseinfo > /root/mysql.sql
Enter password: 
[root@localhost ~]# vi /root/mysql.sql 



